#!/usr/bin/env bash

#
# Install node packages
#
# Global packages should only be used when npx <command> is not an option, which
# is normally when a global package is required as a integration with another
# tool. Do not install globally just to run a node command from the command line
# since npx will normally be preferred.
#

NODE_GLOBAL=~/.dotfiles/config/node/global.txt
should-run -m 14 $0 $NODE_GLOBAL || exit 0

#
# Set up nvm
#
[ ! -d ~/.nvm ] && mkdir ~/.nvm

#
# Set up npm to install global in home directory
# See https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally
#

# [ ! -d ~/.npm-global ] && mkdir ~/.npm-global
# By default npm prefix is /usr/local, instead we want CLIs and node modules
# installed relative to home directory
# npm config set prefix '~/.npm-global'

#
# Report what's install globally
#
npm list --global --depth=0

# Install missing packages

cat $NODE_GLOBAL | grep -v '#' | grep '@' |
  grep -F -v "`npm list --global --depth=0 2>/dev/null | grep "@" |
  sed 's/.* \(.*\)@[^@]*/\1/'`" |
  xargs npm install --global

npm -g outdated
npm -g update

echo
echo "... Global node packages installed"

should-run -fu $0
