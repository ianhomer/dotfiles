#!/usr/bin/env bash

set -e

#
# Install node packages
#
# Global packages should only be used when npx <command> is not an option, which
# is normally when a global package is required as a integration with another
# tool. Do not install globally just to run a node command from the command line
# since npx will normally be preferred.
#

NODE_GLOBAL=~/.dotfiles/config/node/global.txt
should-run -m 14 $@ $0 $NODE_GLOBAL || exit 0
$(shim) && . ${ME}/i.sh

#
# Set up nvm
#
[ ! -d ~/.nvm ] && mkdir ~/.nvm

#
# Node is installed with brew and pnpm installed with corepack
#
which node
node -v

#
# Uninstall all npm globals so that we can use pnpm
#

log:: "Cleaning npm globals"
npm ls --global --json                                                               |
  jq --raw-output  '.dependencies | keys[] | select((. != "npm") and (. != "pnpm"))' |
  xargs -r npm -g rm

log:: "Updating pnpm"
pnpm add -g pnpm
log:: "Updating npm"
npm install -g npm

#
# pnpm needs one package to be able start listing globals
#
log:: "pnpm global list"
pnpm --global list 2>/dev/null || pnpm --global install pyright

# Install missing packages

log:: "pnpm install missing global"
cat $NODE_GLOBAL | grep -v '#' | grep '@'                |
  grep -F -v "`pnpm --global --json list                 |
  jq --raw-output '.[0].dependencies | keys[] + \"@\"'`" |
  xargs pnpm install --global

log:: "checking pnpm outdated"
pnpm --global outdated || log:: "pnpm is outdated"
log:: "pnpm update"
pnpm --global update

echo
log:: "... Global node packages installed"

# Running lint daemons might have been updated, stop to
# allow a restart when needed
log:: "... Stopping lint daemons"

pkill -f prettierd || log:: "no pettier daemon to stop"
pkill -f eslint_d || log:: "no eslint daemon to stop"

should-run -fu $0
