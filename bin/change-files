#!/usr/bin/env bash

#
# Change files in a given directory.
#
# e.g.
#
#    change-my-files . .md s#x#y#g
#
# Only works in a git directory. This gives a level of protection against
# undesired changes.
#
# This is also a pattern library for auto changing files which can be lift and
# shifted as needed.
#

OPTIND=1
while getopts "dq" o; do case "$o" in
  q) QUICK=y ;;
  d) DRY=y ;;
esac done
shift $((OPTIND-1))
[ "${1:-}" = "--" ] && shift

printf "\e[37mchanging my files\e[0m\n"
[ -z "$QUICK" ] || echo "Quick run"
[ -z "$DRY" ] || echo "Dry run"

directory=$1
files=$2
change=$3

[ -z "$directory" ] && echo "No directory" && exit
[ -z "$files" ] && echo "No files" && exit
[ -z "$change" ] && echo "No change" && exit

EXCLUDE="node_modules|dist"

deepChangeText() {
  echo "changing text : $1 : $2 : $3"
  find "$1" -name "*$2" -print | egrep -v $EXCLUDE | \
    xargs sed -i '' $3
}

changeJson() {
  change=$1
  file=$2
  echo "changing json : $file : $change"
  TJQ=$(jq "$change" < $file)
  [[ $? == 0 ]] && echo "${TJQ}" >| $file
}
export -f changeJson

deepChangeJson() {
  echo "changing json : $1 : $2 : $3"
  find "$1" -name "*$2" -print | egrep -v $EXCLUDE | \
    CHANGE="$3" xargs -t -n 1 -P 10 -I {} bash -c 'changeJson "$CHANGE" "$@"' _ {}
}

mode="sed"
if [[ "${change:0:2}" = "s#" ]] ; then
  mode="sed"
elif [[ "$files" = ".json" ]] ; then
  mode="jq"
fi

case "$mode" in
  sed) deepChangeText "$directory" "$files" "$change" ;;
  jq)  deepChangeJson "$directory" "$files" "$change" ;;
esac



