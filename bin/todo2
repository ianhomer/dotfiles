#!/usr/bin/env python3

import argparse
import configparser
import os
import os.path
import subprocess
from datetime import datetime
from pathlib import Path
home = str(Path.home())

config = configparser.ConfigParser()
config.read(str(Path.home()) + "/.config/dotme/shim.ini")
THINGS_DIR = config['DEFAULT']['THINGS_DIR']


def run():
    parser = argparse.ArgumentParser(description='todoer')
    parser.add_argument('do', nargs='*', help='do')
    args = parser.parse_args()

    if args.do:
        words = []

        # Scan words
        for word in args.do:
            words.append(word)
        # do to add
        do = " ".join(words)
        add(do)

    pattern = "\\- \\[ \\](?! [\\.\\-~\\^])"
    result = subprocess.run(["ag", "--nofilename", "--nocolor", "--nobreak",
                             pattern, THINGS_DIR], text=True,
                            stdout=subprocess.PIPE)

    lines = result.stdout.splitlines()
    lines.sort()
    columns = os.get_terminal_size().columns
    for line in lines:
        print(line.replace("- [ ] ", "")[:columns])
#    os.system("ag --nofilename --nocolor --nobreak " +
#              f"\"{pattern}\" {THINGS_DIR} " +
#              "| cut -c 3- " +
#              "| sort " +
#              "| cut -c -$(tput cols)")


# Add a do
def add(do):
    now = datetime.now()
    today = now.strftime("%m%d")
    todayLog = f"{THINGS_DIR}/my-notes/stream/{today}.md"
    if not os.path.isfile(todayLog):
        Path(todayLog).touch()
    with open(todayLog, 'r+') as file:
        file.seek(0)
        lines = file.readlines()
        length = len(lines)
        if length == 0:
            # Add date heading
            todayLong = now.strftime("%a %m %b %Y").upper()
            lines.append(f"# {todayLong}\n\n")
        elif length == 1:
            # Guard to make sure todos don't crash heading of manually created
            # file
            lines.append("\n")

        lines.append(f"- [ ] {do}\n")
        file.seek(0)
        file.writelines(lines)


run()
