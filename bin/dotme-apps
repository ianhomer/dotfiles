#!/usr/bin/env bash

# Install apps
#
# Alternative approach to brew where brew is not appropriate, e.g. with cask in
# brew that requires admin password to install (and hence requires user
# interaction)
#

set -e
$(shim) && cd ${ME} && . bin/i.sh
should-run -m 7 $@ $0 || exit 0

#
# Manual gcloud install process. Prefered over brew, since we have this in brew
# brew update requires users' password. Furthermore it is not possible to pin a cask
# in brew to control the update process in brew. Requiring a password breaks
# non-interactive flow which disrupts general day-to-day processes.
#
# TODO : Consider update process of this, does gcloud itself warn us if it is
# out of date. When I run into this, I will update this process to handle
# updates.
if ! command -v gcloud 2>/dev/null ; then
  log:: "gcloud is not installed"
  downloaded=~/local/gcloud/google-cloud-cli*.tar.gz
  echo $downloaded
  mkdir -p ~/local/gcloud
  if [ ! -f ${downloaded} ] ; then
    log:: "Download latest tar.gz from https://cloud.google.com/sdk/docs/install-sdk to ~/local/gcloud"
    log:: "... cd ~/local/gcloud ; curl -O URL"
    log:: "... and then rerun this"
  else
    cd ~/local/gcloud
    echo "Installing from "${downloaded}
    tar xvf ${downloaded}
  fi
fi

should-run -fu $0
