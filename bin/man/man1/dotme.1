'\" t
.\" Automatically generated by Pandoc 2.13
.\"
.TH "" "" "" "" ""
.hy
.SH dotme user guide
.SS NAME
.PP
\f[B]dotme\f[R] - manage environment driven by these \[lq]dot
files\[rq].
.SS SYNOPSIS
.PP
\f[B]dotme [-h] [-vd]\f[R] [command]
.SS DESCRIPTION
.PP
The \f[B]dotme\f[R] utility installs and configures a local computer
environment based driven by an opinionated set of \[lq]dot files\[rq].
These \[lq]dot files\[rq] drive a common configuration for tools like
vim, tmux and brew.
By running this on all local environment you can ensure that all local
environments worked on are the configured the same.
.PP
Supported commands are as follows:
.TP
\f[B]packages\f[R]
install packages with local package manager, e.g.\ brew or pacman
.TP
\f[B]clean\f[R]
clean up caches
.TP
\f[B]compile\f[R]
compile resource such as man files
.TP
\f[B]help\f[R]
this help
.TP
\f[B]install\f[R] (default)
install all configurations
.TP
\f[B]man\f[R]
view these man files
.TP
\f[B]pull\f[R]
update local configuration files from git source
.TP
\f[B]stow\f[R]
stow the configuration files so that each tool picks up the desired
configuration.
.TP
\f[B]uninstall\f[R]
uninstall the dot file configuration, reversing some of the steps made
during installing.
Note that this is not a complete reversal, for example applications
installed with brew will remain.
.TP
\f[B]unstow\f[R]
reverse of the \f[B]stow\f[R] operation
.TP
\f[B]update\f[R]
update packages already installed, e.g.\ brew packages
.SS OPTIONS
.TP
-h
this help
.TP
-v
verbose mode
.TP
-f module
force dotme module to run
.TP
-d
dry run
.SH My .dotfiles
.PP
Configure my computers to be more keyboard focused and reduce
distraction.
Make coding and text editing a breeze.
.SS tl;dr
.PP
First time clone repository and install:
.IP
.nf
\f[C]
git clone git\[at]github.com:ianhomer/dotfiles.git \[ti]/.dotfiles
\[ti]/.dotfiles/start
\f[R]
.fi
.PP
Update at any time with:
.IP
.nf
\f[C]
dotme
\f[R]
.fi
.PP
This gets local machine up to date, including pulling latest version of
this repository, sets OSX defaults, updates brew including packages.
Run this at any time to update to latest.
It updates what\[cq]s changed or out of date, so it\[cq]s quick and
painless.
.PP
I remind myself of commands and shortcuts I use with:
.IP
.nf
\f[C]
cheat
\f[R]
.fi
.SS Why
.PP
The configuration process in this repository provides me with my
preferred way of working to streamline distraction free coding.
This includes:
.TP
\f[B]brew\f[R]
package manager
.TP
\f[B]fish\f[R] and \f[B]zsh\f[R]
friendly interactive shells
.TP
\f[B]git\f[R]
source control
.TP
\f[B]kitty\f[R] and \f[B]alacritty\f[R]
slick terminals
.TP
\f[B]tmux\f[R]
terminal multiplexer with plugins - tmux-continuum ; tmux-resurrect ;
vim-tmux-navigator
.TP
\f[B]neovim\f[R]
file editing with plugins - airline ; ale ; dispatch ; fugitive ;
fzf.vim ; lsp ; markdown-preview ; nerdtree ; repeat ; startify ;
surround ; tabular ; which-key ; surround
.TP
\f[B]nnn\f[R] and \f[B]broot\f[R]
file explorers
.TP
\f[B]FiraCode Nerd Font\f[R]
ligatures, powerline and more
.TP
\f[B]termux\f[R]
Android support
.PP
MacOS with
.TP
\f[B]alfred (https://www.alfredapp.com/)\f[R]
better hotkeys
.TP
\f[B]dozer (https://github.com/Mortennn/Dozer)\f[R]
focused status bar
.TP
\f[B]magnet (https://magnet.crowdcafe.com/)\f[R]
window manager
.PP
Other tools woven into these dotfiles include \f[B]ag\f[R],
\f[B]fzf\f[R], \f[B]pandoc\f[R], \f[B]cspell\f[R], \f[B]fugitive\f[R],
\f[B]java\f[R], \f[B]node\f[R] and \f[B]python\f[R].
.SS How
.PP
dotfiles are all located in sub-folders in the dotfiles/ folder for the
associated tools.
Installation stows these in your home directory, i.e.\ original backed
up and dotfiles linked into place.
Further installation and configuration takes place with scripts in the
bin directory.
Look at bin/dotme to see what actually happens.
.PP
You can also update parts of the initialisation separately, see
\f[C]dotme -h\f[R] to get a list of each part.
\f[C]man dotme\f[R] will give you more guidance on usage.
.PP
I configure something on my system ./docs/manual-configuration.md for
minor tweaks and enhancements.
.PP
To customise local dotme configuration,
\f[C]vi \[ti]/.config/dotme/.env\f[R] and edit a properties to look
like:
.IP
.nf
\f[C]
MY_NOTES=my-notes
\f[R]
.fi
.SS Thanks
.PP
A large number of dotfiles projects out there that have given me
inspiration to mention them all, although Awesome
dotfiles (https://github.com/webpro/awesome-dotfiles) make a good
attempt to.
Particular thanks to:
.IP \[bu] 2
webpro (https://github.com/webpro/dotfiles)
.IP \[bu] 2
Mathias (https://github.com/mathiasbynens/dotfiles)
.IP \[bu] 2
Paul Irish (https://github.com/paulirish/dotfiles)
.IP \[bu] 2
Managing dotfiles with
stow (https://alexpearce.me/2016/02/managing-dotfiles-with-stow/)
.IP \[bu] 2
egel (https://github.com/egel/dotfiles)
.IP \[bu] 2
Ultimate vim configuration (https://github.com/amix/vimrc)
.IP \[bu] 2
noctuid - keyboard-based workflows (https://github.com/noctuid/dotfiles)
.SH Cheatsheet
.IP \[bu] 2
brave
.IP \[bu] 2
cheat of cheats
.IP \[bu] 2
fish
.IP \[bu] 2
gmail
.IP \[bu] 2
osx
.IP \[bu] 2
tmux
.IP \[bu] 2
vim
.SS Todoist
.TP
\f[B]Ctrl+Cmd+a\f[R]
Create task
.TP
\f[B]Ctrl+Cmd+t\f[R]
Open up tasks list
.SS Magnet
.TP
\f[B]Ctrl+Opt+return\f[R]
Full screen
.TP
\f[B]Ctrl+Opt+left\f[R]
Window to left half
.TP
\f[B]Ctrl+Opt+right\f[R]
Window to right half
.TP
\f[B]Ctrl+Opt+up\f[R]
Window to top half
.TP
\f[B]Ctrl+Opt+down\f[R]
Window to bottom half
.TP
\f[B]Ctrl+Opt+uijk\f[R]
Quarter screen
.TP
\f[B]Ctrl+Opt+deftg\f[R]
Thirds
.TP
\f[B]Ctrl+Opt+back\f[R]
Back to manually set screen size
.SS iterm
.TP
\f[B]Cmd+n\f[R]
New terminal window
.TP
\f[B]git open\f[R]
Open git repository in web browser
.TP
\f[B]\f[CB]z my-dir <tab>\f[B]\f[R]
find recently opened folder (using fasd)
.TP
\f[B]z\f[R]
list recently opened folder we
.SS git
.TP
\f[B]git-remote-fix\f[R]
Fix git remote, e.g.\ use personal context, use SSH, reset SSH keys
.SS Document conversions
.TP
\f[B]pandoc README.md -s -o \[ti]/tmp/test.pdf\f[R]
convert markdown file to PDF
.SH Brave Cheats
.SS Brave
.PP
.TS
tab(@);
l l.
T{
\f[C]Cmd+l\f[R]
T}@T{
Jump to address bar
T}
T{
\f[C]Opt+Cmd+left/right\f[R]
T}@T{
Go to previous/next tab
T}
T{
\f[C]Cmd+w\f[R]
T}@T{
Close tab
T}
T{
\f[C]Opt+Cmd+b\f[R]
T}@T{
Open bookmarks
T}
T{
\f[C]Ctrl+Tab\f[R]
T}@T{
Forward to next tab
T}
T{
\f[C]Shift+Ctrl+Tab\f[R]
T}@T{
Back to previous tab
T}
T{
\f[C]Shift+Fn+Delete\f[R]
T}@T{
Delete suggestion from URL bar
T}
.TE
.SS Surfkeys
.PP
Doesn\[cq]t work in extension tabs due to security constraints.
.PP
.TS
tab(@);
l l.
T{
\f[C]?\f[R]
T}@T{
Help
T}
T{
\f[C]e\f[R]
T}@T{
page up
T}
T{
\f[C]d\f[R]
T}@T{
page down
T}
T{
\f[C]go\f[R]
T}@T{
Go to URL
T}
T{
\f[C]t\f[R]
T}@T{
Search history
T}
T{
\f[C]b\f[R]
T}@T{
Search bookmarks
T}
T{
\f[C]f\f[R]
T}@T{
Find link
T}
T{
\f[C]v\f[R]
T}@T{
Find text (visual mode)
T}
T{
\f[C]i\f[R]
T}@T{
Go to input box
T}
T{
\f[C]I\f[R]
T}@T{
Go to input box with vi edit mode
T}
T{
\f[C]T\f[R]
T}@T{
Go to tab
T}
T{
\f[C]gxx\f[R]
T}@T{
Close all tabs except current one
T}
T{
\f[C]ss\f[R]
T}@T{
Search stack overflow
T}
T{
\f[C]sg\f[R]
T}@T{
Search google
T}
T{
\f[C]ya\f[R]
T}@T{
Copy a URL from the page
T}
T{
\f[C]yy\f[R]
T}@T{
Copy the current URL of the page
T}
T{
\f[C]yG\f[R]
T}@T{
Screenshot full page
T}
T{
\f[C]x\f[R]
T}@T{
Close a tab
T}
.TE
.SH Cheat of Cheats
.SS collections
.IP \[bu] 2
<https://cheatography.com/>
.IP \[bu] 2
<https://devhints.io/>
.SS vi
.IP \[bu] 2
<https://devhints.io/vim>
.IP \[bu] 2
<https://vim.rtorr.com/>
.IP \[bu] 2
\f[C]<leader>-m\f[R] -> configured maps
.SS tmux
.IP \[bu] 2
<https://tmuxcheatsheet.com/>
.SS mac
.PP
System Preferences -> Keyboard -> Shortcuts
.SS other tools
.IP \[bu] 2
<https://support.google.com/mail/answer/6594>
.SH dotfiles
.PP
Commands provided by this dotfiles repository
.SS aliases
.PP
.TS
tab(@);
l l.
T{
\f[C]vif\f[R]
T}@T{
FZF to find file to open in vi
T}
.TE
.SH fish Cheats
.SS fish
.SS line
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a Ctrl+a\f[R]
T}@T{
go to beginning of line
T}
T{
\f[C]Ctrl+e\f[R]
T}@T{
go to end of line
T}
T{
\f[C]Ctrl+b\f[R]
T}@T{
go back a word
T}
T{
\f[C]Ctrl+f\f[R]
T}@T{
go forward a word
T}
T{
\f[C]bind\f[R]
T}@T{
see key binding
T}
.TE
.SH Gmail Cheats
.SS Gmail
.PP
gmail keyboard shortcuts (https://support.google.com/mail/answer/6594) :
.IP \[bu] 2
\f[B]Shift-?\f[R] - keyboard shortcuts
.IP \[bu] 2
\f[B],\f[R] - move focus
.IP \[bu] 2
\f[B]e\f[R] - archive message
.IP \[bu] 2
\f[B]s\f[R] - star message
.SH List of Cheats
.PP
.TS
tab(@);
l l l l l.
T{
Shortcut
T}@T{
P
T}@T{
App
T}@T{
Context
T}@T{
Action
T}
_
T{
Alt-Space
T}@T{
T}@T{
OSX
T}@T{
Window
T}@T{
Open Kitty
T}
T{
Cmd-Tab
T}@T{
T}@T{
OSX
T}@T{
Window
T}@T{
Cycle applications
T}
T{
Cmd-\[ti]
T}@T{
T}@T{
OSX
T}@T{
Window
T}@T{
Cycle Windows
T}
T{
Ctrl-Cmd-o
T}@T{
*
T}@T{
OSX
T}@T{
Shell
T}@T{
Open floating shell
T}
T{
Ctrl-Tab
T}@T{
*
T}@T{
OSX
T}@T{
Window
T}@T{
Cycle Tabs
T}
T{
Ctrl-Cmd-k
T}@T{
T}@T{
OSX
T}@T{
Window
T}@T{
Window to bottom right
T}
T{
ghjk
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Left, Up, Down, Right
T}
T{
gg
T}@T{
T}@T{
vi
T}@T{
Motion
T}@T{
Top of buffer
T}
T{
H
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Up
T}
T{
Ctrl-U
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Up
T}
T{
Ctrl-B
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Up
T}
T{
Ctrl-Y
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Up
T}
T{
Ctrl-E
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Down
T}
T{
Ctrl-D
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Down
T}
T{
Ctrl-F
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Down
T}
T{
L
T}@T{
*
T}@T{
vi
T}@T{
Motion
T}@T{
Down
T}
T{
G
T}@T{
T}@T{
vi
T}@T{
Motion
T}@T{
Bottom of buffer
T}
T{
space-t
T}@T{
T}@T{
vi
T}@T{
Markdown
T}@T{
Format table
T}
T{
space-y
T}@T{
*
T}@T{
vi
T}@T{
Markdown
T}@T{
Add table header
T}
T{
space-s
T}@T{
T}@T{
vi
T}@T{
File
T}@T{
Save
T}
T{
space-m
T}@T{
T}@T{
vi
T}@T{
Keys
T}@T{
Mapped keys
T}
.TE
.SH OSX Cheats
.SS OSX
.SS Windows
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+Cmd+click+drag\f[R]
T}@T{
Move Window
T}
T{
\f[C]Ctrl+Cmd+space\f[R]
T}@T{
Open special character window
T}
T{
\f[C]Cmd+Tab\f[R]
T}@T{
Switch Application.
Shift reverses.
T}
T{
\f[B]Cmd+backtick\f[R]
T}@T{
Switch between windows in app.
Shift reverses.
T}
T{
\f[C]Ctrl+Tab\f[R]
T}@T{
Cycle through tabs in a window.
Shift reverses.
T}
T{
\f[C]Cmd+h\f[R]
T}@T{
Hide window
T}
T{
\f[C]Cmd+c\f[R]
T}@T{
Copy
T}
T{
\f[C]Cmd+v\f[R]
T}@T{
Paste
T}
T{
\f[C]Cmd+z\f[R]
T}@T{
Undo
T}
T{
\f[C]Shift+Cmd+3\f[R]
T}@T{
full screen shot capture
T}
T{
\f[C]Shift+Cmd+4\f[R]
T}@T{
select portion of screen to capture
T}
T{
\f[C]Shift+Cmd+5\f[R]
T}@T{
screen shot interactive mode
T}
T{
\f[C]Cmd+Alt+d\f[R]
T}@T{
Show or hide dock
T}
T{
\f[C]Ctrl+Fn+F3\f[R]
T}@T{
Use dock with arrow keys
T}
T{
\f[C]Ctrl+Fn+F2\f[R]
T}@T{
Use menu with arrow keys
T}
T{
\f[C]Cmd+j\f[R]
T}@T{
iterm window to front
T}
.TE
.TP
\f[B]\f[CB]Shift+Opt+ bluetooth -> debug\f[B]\f[R]
Reset bluetooth
.PP
See System Preferences -> Keyboard -> Shortcuts for details
.SS Finder
.PP
.TS
tab(@);
l l.
T{
\f[C]Shift+Cmd+.\f[R] - in finder window
T}@T{
Show hidden files
T}
.TE
.SS Links
.PP
<https://duckduckgo.com/?q=mac+shortcuts&t=brave&ia=cheatsheet&iax=1>
.SH Test
.SS Examples
.PP
The following should be equivalent
.TP
\f[B]:\f[R]
Definition List with bold
.TP
\f[B]\f[CB]:\f[B]\f[R]
Definition List with backtick
.IP \[bu] 2
\f[C]-\f[R] : List with backtick
.IP \[bu] 2
\f[B]-\f[R] : List with bold
.PP
.TS
tab(@);
l l.
T{
\f[C]{pipe}\f[R]
T}@T{
Table row with backtick
T}
T{
\f[B]{pipe}\f[R]
T}@T{
Table row with bold
T}
.TE
.SH tmux cheats
.SS tmux
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a\f[R]
T}@T{
prefix
T}
.TE
.SS sessions
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a+$\f[R]
T}@T{
rename session
T}
T{
\f[C]Ctrl+a+s\f[R]
T}@T{
choose session
T}
T{
\f[C]Ctrl+a+d\f[R]
T}@T{
detach from session
T}
T{
\f[C]Ctrl+a :new\f[R]
T}@T{
create new session
T}
.TE
.SS windows
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a+c\f[R]
T}@T{
new window
T}
T{
\f[C]Ctrl+a+w\f[R]
T}@T{
show windows
T}
T{
\f[C]Ctrl+a+,\f[R]
T}@T{
rename window
T}
T{
\f[C]Alt+arrow\f[R]
T}@T{
move to window left or right
T}
T{
\f[C]Shift+Alt+arrow\f[R]
T}@T{
move window left or right in tab order
T}
.TE
.SS panes
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a+z\f[R]
T}@T{
zoom in / out of current pane
T}
T{
\f[C]Ctrl+a+\[rs]\f[R]
T}@T{
split pane right
T}
T{
\f[C]Ctrl+a+-\f[R]
T}@T{
split pane below
T}
T{
\f[C]Ctrl+a+x\f[R]
T}@T{
close pane
T}
T{
\f[C]Opt+arrow\f[R]
T}@T{
move between panes
T}
T{
\f[C]Ctrl+hjkl\f[R]
T}@T{
move between panes ; including through vim panes
T}
T{
\f[C]Ctrl+arrow\f[R] r
T}@T{
move between panes ; including through vim panes
T}
T{
\f[C]Ctrl+a+{\f[R]
T}@T{
move pane left
T}
T{
\f[C]Ctrl+a+}\f[R]
T}@T{
move pane right
T}
.TE
.SS maps
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a+?\f[R]
T}@T{
show bindings
T}
.TE
.SS edit
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a+[\f[R]
T}@T{
vi copy mode with Enter to copy selection
T}
.TE
.SS misc
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+a+t\f[R]
T}@T{
show time
T}
T{
\f[C]Ctrl+a+r\f[R]
T}@T{
reload tmux configuration
T}
T{
\f[C]Ctrl+a+Ctrl+r\f[R]
T}@T{
reload tmux state
T}
T{
\f[C]Ctrl+a+space\f[R]
T}@T{
toggle between layouts
T}
T{
\f[C]tmux ls\f[R]
T}@T{
list sessions
T}
T{
\f[C]tmux attach -tmy-session\f[R]
T}@T{
attach to session
T}
.TE
.TP
hold option + mouse
bypass tmux mouse handling and do iterm action
.TP
click command click
block select
.SS links
.PP
more tmux cheats (https://tmuxcheatsheet.com/)
.SH Cheats - vim
.SS vim
.SS memento
.PP
Things I\[cq]m trying to remember.
.PP
.TS
tab(@);
l l.
T{
\f[C]gd\f[R]
T}@T{
Go to definition
T}
T{
\f[C]ctrl-]\f[R]
T}@T{
Go to tag
T}
T{
\f[C]ctrl-o\f[R]
T}@T{
Jump back to previous location (after \f[C]gd\f[R] or \f[C]ctr-]\f[R]
T}
T{
\f[C]space-d\f[R]
T}@T{
Show LSP diagnostics on current line
T}
T{
\f[C][-d\f[R]
T}@T{
Previous LSP diagnostic
T}
T{
\f[C]]-d\f[R]
T}@T{
Next LSP diagnostic
T}
T{
\f[C]ctrl-X\f[R]
T}@T{
In FZF open in horizontal split
T}
T{
\f[C]%norm\f[R]
T}@T{
Do operation on each line in file
T}
T{
\f[C]csw\[dq]\f[R]
T}@T{
Quote word
T}
.TE
.SS misc
.PP
.TS
tab(@);
l l.
T{
\f[C]space+r\f[R]
T}@T{
Open (paste) registry
T}
T{
\f[C]space+c\f[R]
T}@T{
Commits
T}
T{
\f[C]space+cw\f[R]
T}@T{
Clear white space
T}
T{
\f[C]space+h\f[R]
T}@T{
File open history
T}
.TE
.SS maps
.PP
.TS
tab(@);
l l.
T{
\f[C]space+m\f[R]
T}@T{
Keyboard map for normal mode
T}
T{
\f[C]:Maps!\f[R]
T}@T{
Open maps in full screen
T}
T{
\f[C]space+l\f[R]
T}@T{
Keyboard map for insert mode
T}
T{
\f[C]:dig\f[R]
T}@T{
List di-graphs
T}
T{
\[ga]ctrl-k Co
T}@T{
Insert di-graph e.g.\ \[co]
T}
.TE
.SS files
.PP
.TS
tab(@);
l l.
T{
\f[C]space+n\f[R]
T}@T{
Open nerd tree
T}
T{
\f[C]space+s\f[R]
T}@T{
Save all files
T}
T{
\f[C]space+f\f[R]
T}@T{
Open file browser
T}
T{
\f[C]:cd\f[R]
T}@T{
change directory
T}
T{
\f[C]space + r\f[R] or \f[C]:reg\f[R]
T}@T{
show paste registry
T}
T{
\f[C]\[dq]2p\f[R]
T}@T{
paste a previous cut
T}
T{
\f[C]gf\f[R]
T}@T{
go to file under cursor
T}
T{
\f[C]gx\f[R]
T}@T{
open link in browser
T}
T{
\f[C]gt\f[R]
T}@T{
go to next tab
T}
T{
\f[C]tabe\f[R]
T}@T{
open file in new tab
T}
T{
\f[C]m + letter\f[R]
T}@T{
set mark
T}
T{
\f[C]\[aq] + letter\f[R]
T}@T{
go to mark
T}
T{
\f[C]Ctrl+\[ha]\f[R]
T}@T{
switch to previous buffer
T}
T{
\f[C]:tab h foo\f[R]
T}@T{
open help in a new tab
T}
T{
\f[C]Ctrl+w o\f[R]
T}@T{
make pane the visible one
T}
T{
\f[C]:noh\f[R]
T}@T{
clear last highlight
T}
T{
\f[C]\[dq]add\f[R]
T}@T{
Delete line into registry a
T}
T{
\f[C]\[dq]ap\f[R]
T}@T{
Paste line from registry a
T}
.TE
.TP
\f[B]\f[CB]:enew | pu=execute(\[aq]autocmd\[aq])\f[B]\f[R]
copy output of command, e.g.\ autocmd, into buffer
.SS buffers
.PP
.TS
tab(@);
l l.
T{
\f[C]:bd\f[R]
T}@T{
close buffer
T}
T{
\f[C]:bn\f[R]
T}@T{
next buffer
T}
T{
\f[C]bufdo bd\f[R]
T}@T{
close all buffers
T}
T{
\f[C]space+b\f[R]
T}@T{
Commits for current buffer
T}
T{
\f[C]space+o\f[R]
T}@T{
Close all buffers except current one
T}
T{
\f[C]space+space\f[R]
T}@T{
Show buffers
T}
.TE
.SS NERDTree
.PP
.TS
tab(@);
l l.
T{
\f[C]m\f[R]
T}@T{
open file action
T}
T{
\f[C]Shift+i\f[R]
T}@T{
show hidden files
T}
T{
\f[C]Shift+r\f[R]
T}@T{
reload node
T}
T{
\f[C]U\f[R]
T}@T{
Up directory
T}
T{
\f[C]C\f[R]
T}@T{
Set root directory
T}
T{
\f[C]cd\f[R]
T}@T{
Change current directory to current note
T}
T{
\f[C]CD\f[R]
T}@T{
Change root directory to current directory
T}
.TE
.SS motion
.PP
.TS
tab(@);
l l.
T{
\f[C]0\f[R]
T}@T{
beginning of line
T}
T{
\f[C]\[rs]$\f[R]
T}@T{
end of line
T}
T{
\f[C]}\f[R]
T}@T{
next block
T}
T{
\f[C]{\f[R]
T}@T{
previous block
T}
T{
\f[C][[\f[R]
T}@T{
next header
T}
T{
\f[C]]]\f[R]
T}@T{
previous header
T}
T{
\f[C]:nn\f[R]
T}@T{
line nn
T}
T{
\f[C]gd\f[R]
T}@T{
go to definition
T}
T{
\f[C]gg\f[R]
T}@T{
beginning of file
T}
T{
\f[C]GG\f[R]
T}@T{
end of file
T}
T{
\f[C]percent %\f[R]
T}@T{
next / previous bracket
T}
T{
\f[C]*\f[R]
T}@T{
Search for next occurrence of word under cursor
T}
T{
\f[C]Ctrl+o\f[R]
T}@T{
Jump to previous cursor position (jumplist)
T}
T{
\f[C]Ctrl+i\f[R]
T}@T{
Jump to next cursor position (jumplist)
T}
T{
\f[C]Ctrl+u\f[R]
T}@T{
Scroll up
T}
T{
\f[C]Ctrl+d\f[R]
T}@T{
Scroll down
T}
T{
\f[C]zz\f[R]
T}@T{
Scroll window center current line
T}
T{
\f[C]zt\f[R]
T}@T{
Scroll down with current line at top
T}
T{
\f[C]zb\f[R]
T}@T{
Scroll up with current line at bottom
T}
T{
\f[C]Ctrl+]\f[R]
T}@T{
Go to tag definition
T}
T{
\f[C]Ctrl+t\f[R]
T}@T{
Go back up call stack
T}
.TE
.SS windows
.PP
.TS
tab(@);
l l.
T{
\f[C]:split\f[R]
T}@T{
split pane
T}
T{
\f[C]:vsplit\f[R]
T}@T{
split pan vertically
T}
T{
\f[C]80 Ctrl+w\f[R]
T}@T{
set current pane to 80 characters
T}
T{
\f[C]Ctrl+w Ctrl+=\f[R]
T}@T{
even out the windows
T}
.TE
.SS edit
.PP
.TS
tab(@);
l l.
T{
\f[C]space+g\f[R]
T}@T{
distraction free coding with Goyo
T}
T{
\f[C]gw{motion}\f[R]
T}@T{
reformat content
T}
T{
\f[C]select+gw\f[R]
T}@T{
reformat content
T}
T{
\f[C]select+S\[dq]\f[R]
T}@T{
surround selected \f[B]area\f[R] with quotes
T}
T{
\f[C]ysiW\[dq]\f[R]
T}@T{
surround word with quotes
T}
T{
\f[C]ysiWb\f[R]
T}@T{
surround double star - bold
T}
T{
\f[C]visual+S\f[R]
T}@T{
surround visual selection
T}
T{
\f[C]Ctrl+v\f[R]
T}@T{
select visual block, e.g.\ column
T}
T{
\f[C]:%!jq .\f[R]
T}@T{
reformat JSON
T}
T{
\f[C]count+space+cc\f[R]
T}@T{
comment out the next count lines
T}
T{
\f[C]:Format\f[R]
T}@T{
Format current buffer
T}
T{
\f[C]:nu\f[R]
T}@T{
Show line numbers
T}
T{
\f[C]:set rnu\f[R]
T}@T{
Show relative line numbers
T}
T{
\f[C]space+w\f[R]
T}@T{
Clear white space at end of lines
T}
T{
\f[C]yaf\f[R]
T}@T{
Yank all file
T}
.TE
.TP
\f[B]:Tabularize /|\f[R] or **space**
Align paragraph on character
.SS insert mode
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+x+Ctrl+f\f[R]
T}@T{
File name completion
T}
T{
\f[C]Ctrl+[\f[R]
T}@T{
Exit insert mode
T}
.TE
.SS Spell
.PP
.TS
tab(@);
l l.
T{
\f[C]zg\f[R]
T}@T{
Add word to dictionary
T}
T{
\f[C]2zg\f[R]
T}@T{
Add word to second dictionary
T}
T{
\f[C]z=\f[R]
T}@T{
Show spell options
T}
T{
\f[C]Ctrl+n\f[R]
T}@T{
In insert mode, complete options previous
T}
T{
\f[C]Ctrl+p\f[R]
T}@T{
In insert mode, complete options next
T}
.TE
.SS Git
.PP
.TS
tab(@);
l l.
T{
\f[C]:G\f[R]
T}@T{
Fugitive status window (or refresh it)
T}
T{
\f[C]:Gwrite\f[R]
T}@T{
Git add current file
T}
T{
\f[C]:Gcommit\f[R]
T}@T{
Git commit staged
T}
T{
\f[C]:Gpush\f[R]
T}@T{
Git push
T}
T{
\f[C]:Gcd\f[R]
T}@T{
Change CWD to git root
T}
.TE
.SS Fugitive
.PP
.TS
tab(@);
l l.
T{
\f[C]=\f[R]
T}@T{
Show diff for selected file
T}
T{
\f[C]-\f[R]
T}@T{
Stage of selected file (toggle)
T}
T{
\f[C]-\f[R]
T}@T{
Push current commit or HEAD if on unpushed line
T}
T{
\f[C]s\f[R]
T}@T{
Stage selected file
T}
T{
\f[C]X\f[R]
T}@T{
Discard changes on selected file
T}
T{
\f[C]cc\f[R]
T}@T{
Commit staged files
T}
T{
\f[C]cw\f[R]
T}@T{
Change commit message for selected commit
T}
T{
\f[C]gq\f[R]
T}@T{
Quit fugitive window
T}
T{
\f[C]gpa\f[R]
T}@T{
Go to unpushed and push
T}
.TE
.SS Quickfix
.PP
.TS
tab(@);
l l.
T{
\f[C]]q\f[R]
T}@T{
Next quick fix
T}
.TE
.SS Markdown
.PP
.TS
tab(@);
l l.
T{
\f[C]viWS+\f[R]
T}@T{
make a word bold
T}
T{
\f[C]zR\f[R]
T}@T{
open all folds
T}
T{
\f[C]zM\f[R]
T}@T{
close all folds
T}
T{
\f[C]<space>+l\f[R]
T}@T{
Lint file
T}
.TE
.SS Selections
.PP
.TS
tab(@);
l l.
T{
\f[C]vip\f[R]
T}@T{
select paragraph
T}
T{
\f[C]viW\f[R]
T}@T{
select current word (including non-alphanumeric)
T}
.TE
.SS Configuration
.PP
.TS
tab(@);
l l.
T{
\f[C]space+p\f[R]
T}@T{
Toggle power configuration
T}
T{
\f[C]space+v\f[R]
T}@T{
Reload vim configuration
T}
.TE
.SS fzf
.PP
.TS
tab(@);
l l.
T{
\f[C]Ctrl+x\f[R]
T}@T{
Open in horizontal split
T}
T{
\f[C]Ctrl+v\f[R]
T}@T{
Open in vertical split
T}
T{
\f[C]Ctrl+/\f[R]
T}@T{
Toggle preview window off
T}
.TE
