.\" Automatically generated by Pandoc 2.9.2
.\"
.TH "" "" "" "" ""
.hy
.SH .dotfiles
.PP
Configure my computers, to reduce distraction and do less
clickity-clickity.
.SS tl;dr
.PP
First time do:
.IP
.nf
\f[C]
git clone git\[at]github.com:ianhomer/dotfiles.git \[ti]/.dotfiles
\[ti]/.dotfiles/bin/dotme
\f[R]
.fi
.PP
Then update at any time with:
.IP
.nf
\f[C]
dotme
\f[R]
.fi
.PP
This gets local up to date, including pulling latest version of this
repository, sets OSX defaults, updates brew including packages.
This can be run anytime to just get onto latest.
.SS Why
.PP
The configuration process in this repository provides me my prefered way
of working to streamline distraction free coding.
This includes:
.IP \[bu] 2
\f[B]brew\f[R] - package manager
.IP \[bu] 2
\f[B]fish\f[R] - friendly interactive shell
.IP \[bu] 2
\f[B]git\f[R] - source control
.IP \[bu] 2
\f[B]iterm\f[R] - terminal
.IP \[bu] 2
\f[B]vi\f[R] - file editing
.IP \[bu] 2
\f[B]FiraCode Nerd Font\f[R] - ligatures, powerline and more
.PP
It is also useful if you install a windows manager.
My current favourute is Magnet (https://magnet.crowdcafe.com), but there
are sevaral good ones out there to choose from.
You don\[cq]t have to, however keyboard short cuts and window
optimisations are done under the assumption you have keyboard short cuts
to arrange your windows.
.SS How
.PP
Various dotfiles are all located in sub-folders in the dotfiles/ folder
for various tools.
On installation, each of these are stowed in to your home directory,
i.e.\ original backed up and dotfiles linked into place.
Further installation and configuration takes place with scripts in the
bin/ directory, however just look at bin/dotme to see what actually
happens.
.PP
You can also update parts of the initialisation separately, see
\f[C]dotme -h\f[R] to get a list of each part.
.SS Thanks
.PP
Too many dotfiles projects out there that have given me inspiration to
mention them all, although Awesome
dotfiles (https://github.com/webpro/awesome-dotfiles) make a good
attempt to.
However, particular thanks to:
.IP \[bu] 2
webpro (https://github.com/webpro/dotfiles)
.IP \[bu] 2
Mathias (https://github.com/mathiasbynens/dotfiles)
.IP \[bu] 2
Paul Irish (https://github.com/paulirish/dotfiles)
.IP \[bu] 2
Managing dotfiles with
stow (https://alexpearce.me/2016/02/managing-dotfiles-with-stow/)
.IP \[bu] 2
egel (https://github.com/egel/dotfiles)
.IP \[bu] 2
Ultimate vim configuration (https://github.com/amix/vimrc)
.SH Cheatsheet
.PP
Useful keyboard short cuts.
.SS OSX
.IP \[bu] 2
\f[B]Ctrl+Up\f[R] - Mission Control / space management
.RS 2
.IP \[bu] 2
\f[B]Ctrl-right/left\f[R] - Move to other spaces
.RE
.IP \[bu] 2
\f[B]Ctrl+Cmd+click+drag\f[R] - Move Window
.IP \[bu] 2
\f[B]Ctrl+Cmd+space\f[R] - Open special character window
.IP \[bu] 2
\f[B]Cmd+Tab\f[R] - Switch windows
.IP \[bu] 2
\f[B]Cmd+c\f[R] - Copy
.IP \[bu] 2
\f[B]Cmd+v\f[R] - Paste
.IP \[bu] 2
\f[B]Cmd+z\f[R] - Undo
.SS iterm
.IP \[bu] 2
\f[B]Cmd+n\f[R] - New terminal window
.IP \[bu] 2
\f[B]git open\f[R] - Open git repository in web browser
.IP \[bu] 2
\f[B]z mydir \f[R] - find recently opened folder (using fasd)
.IP \[bu] 2
\f[B]z\f[R] - list recently opened folder we
.SS tmux
.IP \[bu] 2
\f[B]Ctrl-a\f[R] - prefix
.IP \[bu] 2
prefix \f[B]c\f[R] - new window
.IP \[bu] 2
prefix \f[B]w\f[R] - show windows
.IP \[bu] 2
prefix \f[B],\f[R] - rename window
.IP \[bu] 2
prefix \f[B]$\f[R] - rename session
.IP \[bu] 2
prefix \f[B]|\f[R] or \f[B]-\f[R] - split pane
.IP \[bu] 2
prefix \f[B]x\f[R] - close pane
.IP \[bu] 2
prefix \f[B]t\f[R] - show time
.IP \[bu] 2
prefix \f[B]z\f[R] - zoom in / out of current pane
.IP \[bu] 2
prefix \f[B]d\f[R] - detach from session
.IP \[bu] 2
\f[B]Opt-arrow\f[R] - move between panes
.IP \[bu] 2
\f[B]Ctrl-hjkl\f[R] - move between panes including through vim panes
.IP \[bu] 2
\f[B]Ctrl-arrow\f[R] - move between panes including through vim panes
.IP \[bu] 2
\f[B]Ctrl-Shift-arrow\f[R] - move window left or right in tab order
.IP \[bu] 2
prefix \f[B]space\f[R] - toggle between layouts
.IP \[bu] 2
prefix \f[B][\f[R] - copy mode with \f[B]Enter\f[R] to copy selection
.IP \[bu] 2
hold option + mouse - bypass tmux mouse handling and do iterm action
.IP \[bu] 2
click command click - block select
.PP
more tmux cheats (https://tmuxcheatsheet.com/)
.SS git
.IP \[bu] 2
git-set-personal-url - set the repository to push with personal
credentials
.SS fish
.IP \[bu] 2
\f[B]Ctrl-a Ctrl-a\f[R] - beginning of line
.IP \[bu] 2
\f[B]Ctrl-e\f[R] - end of line
.IP \[bu] 2
\f[B]Ctrl-b\f[R] - back a word
.IP \[bu] 2
\f[B]Ctrl-f\f[R] - forward a word
.IP \[bu] 2
\f[B]bind\f[R] - see key bindings
.SS vi
.SS vi - Files, Buffers & Navigations
.IP \[bu] 2
\f[B]:NERDTreeToggle\f[R] or \f[B]space+f\f[R] - Open file browser
.RS 2
.IP \[bu] 2
\f[B]m\f[R] - open file actions
.IP \[bu] 2
\f[B]Shift+i\f[R] - show hidden files
.RE
.IP \[bu] 2
\f[B]:cd\f[R] - change directory
.IP \[bu] 2
\f[B]space + r\f[R] or \f[B]:reg\f[R] - show paste buffer
.IP \[bu] 2
\f[B]:bd\f[R] - close buffer
.IP \[bu] 2
\f[B]:bn\f[R] - next buffer
.IP \[bu] 2
\f[B]\[dq]2p\f[R] - paste a previous cut
.IP \[bu] 2
\f[B]gf\f[R] - go to file under cursor
.IP \[bu] 2
\f[B]gx\f[R] - open link in browser
.IP \[bu] 2
\f[B]gt\f[R] - go to next tab
.IP \[bu] 2
\f[B]tabe\f[R] - open file in new tab
.IP \[bu] 2
\f[B]bufdo bd\f[R] - close all buffers
.IP \[bu] 2
\f[B]m\f[R] + letter - set mark
.IP \[bu] 2
\f[B]\[cq]\f[R] + letter - go to mark
.IP \[bu] 2
\f[B]Ctrl-\[ha]\f[R] - switch to previous buffer
.IP \[bu] 2
\f[B]:tab h whatever\f[R] - open help in a new tab
.IP \[bu] 2
\f[B]Ctrl-w o\f[R] - make pane the only visible one
.IP \[bu] 2
\f[B]:noh\f[R] - clear last hightlight
.IP \[bu] 2
\f[B]:enew|pu=execute(`autocmd')\f[R] - copy output of command,
e.g.\ autocmd, into buffer
.SS netrw
.IP \[bu] 2
\f[B]-\f[R] - up a directory
.IP \[bu] 2
\f[B]i\f[R] - change list view
.IP \[bu] 2
\f[B]I\f[R] - show header
.IP \[bu] 2
\f[B]gn\f[R] - make current node root of tree
.IP \[bu] 2
\f[B]gh\f[R] - hide/unhide dot files
.IP \[bu] 2
\f[B]%\f[R] - create new file
.SS Go to
.IP \[bu] 2
\f[B]0\f[R] - beginnning of line
.IP \[bu] 2
\f[B]$\f[R] - end of line
.IP \[bu] 2
\f[B]}\f[R] - next block
.IP \[bu] 2
\f[B]{\f[R] - previous block
.IP \[bu] 2
\f[B][[\f[R] - next header
.IP \[bu] 2
\f[B]]]\f[R] - previous header
.IP \[bu] 2
\f[B]:nn\f[R] - line nn
.IP \[bu] 2
\f[B]gg\f[R] - beginning of file
.IP \[bu] 2
\f[B]GG\f[R] - end of file
.IP \[bu] 2
\f[B]%\f[R] - next / previous bracket
.SS vi - Window Management
.IP \[bu] 2
\f[B]:split,:vsplit\f[R] - split pane
.IP \[bu] 2
\f[B]80 Ctrl-w\f[R] + - set current pane to 80 characters
.IP \[bu] 2
\f[B]Ctrl-w+left/right\f[R] or \f[B]Ctrl-h/j/k/l\f[R] - move to another
pane
.SS vi - Editing
.IP \[bu] 2
\f[B]:Goyo\f[R] - distraction free coding
.IP \[bu] 2
\f[B]gw{motion}\f[R] - reformat content
.IP \[bu] 2
\f[B]select+gw\f[R] - reformat content
.IP \[bu] 2
\f[B]select+S\[dq]\f[R] - surround selected \f[B]area\f[R] with quotes
.IP \[bu] 2
\f[B]ysiw\[dq]\f[R] - surround word with quotes
.IP \[bu] 2
\f[B]Ctrl-v\f[R] - select visual block, e.g.\ column
.IP \[bu] 2
\f[B]:%!jq .\f[R] - reformat JSON
.IP \[bu] 2
\f[B]:Tabularize /|\f[R] or **space** - Align paragraph on character
.IP \[bu] 2
\f[B]countcc\f[R] - comment out the next count lines
.SS vi - Markdown
.IP \[bu] 2
\f[B]viWS+\f[R] - make a word bold
.IP \[bu] 2
\f[B]zR\f[R] - open all folds
.IP \[bu] 2
\f[B]zM\f[R] - close all folds
.SS vi - Selections
.IP \[bu] 2
\f[B]vip\f[R] - select paragraph
.IP \[bu] 2
\f[B]viW\f[R] - select current word (including non-alphanumeric)
.SS Document conversions
.IP \[bu] 2
\f[B]pandoc README.md -s -o \[ti]/tmp/test.pdf\f[R] - convert markdown
file to PDF
.SH todo
.IP \[bu] 2
Create a way to report on any files not checked in any of my bookmarked
places
.RS 2
.IP \[bu] 2
z, fastd or autojump, z.lua
.RE
.IP \[bu] 2
fzf glitching like - https://github.com/junegunn/fzf.vim/issues/927 -
switched to installing plugin from source to get glitch fix.
Need to verify official way to install plugin after fix released in fzf.
.SS backlog
.IP \[bu] 2
Assess pandoc
.IP \[bu] 2
Remove NERDTree once fully OK with netrw
.IP \[bu] 2
Improve report tool (use python)
.RS 2
.IP \[bu] 2
brew leaves - report what\[cq]s been explicitly installed (over and
above dotfiles), suggest what packages should be removed / auto-prune
option
.RE
.IP \[bu] 2
Can we store learnt spelling dictionary?
And make available to all tools?
\[ti]/Library/Spelling/LocalDictionary
.IP \[bu] 2
Pre-install plugins in vi (currently vi has to be started and
:PlugUpdate run)
.IP \[bu] 2
Pre-run xcode-select \[en]install
.IP \[bu] 2
Assess cmus
.IP \[bu] 2
If necessary execute npm install -g npm
.IP \[bu] 2
Change default shell to fish - currently done manually with
\f[C]chsh -s /usr/local/bin/fish\f[R]
.IP \[bu] 2
Disable Mac OS auto correct keyboard -> text
.IP \[bu] 2
assess neofetch
.IP \[bu] 2
Use includeIf to include git config per organisation / user profile
.IP \[bu] 2
Automate set up of caps lock as escape key
.IP \[bu] 2
Automatically load tmux plugins, currently need to do C-a I
.IP \[bu] 2
Get ta fish completion working, tmux a -t works, how do we register an
alias for autocompletion
.IP \[bu] 2
gx glitched for me to open external URL - why?
.IP \[bu] 2
cheat for listing bind keys consider maping prefix [ ] to moving pane
left right in tmux.
What about up / down?
.IP \[bu] 2
how to make the osx key mapping diff clearer to read, e.g.\ aligned with
git diff-color.
.IP \[bu] 2
Try the following coc-json, coc-yaml, coc-tsserve, coc-html, coc-java,
https://github.com/neoclide/coc.nvim/wiki/Using-coc-extensions
coc-highlight, coc-git, coc-yank, coc-xml, coc-markdownlint,
coc-spell-checker
.IP \[bu] 2
Auto jenv enable-plugin maven
.IP \[bu] 2
Digest aliases from https://preslav.me/2020/03/01/use-the-git-history/
.IP \[bu] 2
Create mechamism to test keyboard output so that I can customise
keyboard and learn how to remap keys.
https://apple.stackexchange.com/questions/317548/how-do-i-get-the-calculator-button-on-a-microsoft-sculpt-keyboard-working
.IP \[bu] 2
Create man page like
https://unix.stackexchange.com/questions/6891/how-can-i-add-man-page-entries-for-my-own-power-tools
