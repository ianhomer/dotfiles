#!/usr/bin/env bash

$(shim)

help() {
  cat << EOF
- [ ] Todo
- [x] Done
- [ ] . Backlog
- [ ] - Near aligment
- [ ] ~ Far alignment
- [ ] ^ Goal
- [ ] ^ ABC Goal for ABC context
- [ ] ! Cancelled
EOF
}

OPTIND=1
while getopts "abc:hgox" o; do case "$o" in
  a) ALL=y ;;
  b) BACKLOG=y ;;
  c) CONTEXT=" $OPTARG" ;;
  g) GOAL=y ;;
  h) help && exit 0 ;;
  o) CANCELLED=y ;;
  x) DONE=y ;;
esac done
shift $((OPTIND-1))

todo="$@"

# If todo is just three characters then it's a context to list
if [[ ${#todo} == 3 ]] ; then
  CONTEXT=" $todo"
  todo=""
fi

if [[ -z "$todo" ]] ; then
  # List todos
  echo
  if [[ -n "$ALL" ]] ; then
    pattern="\- \[[^ox]\]( [\.\-~\^])?$CONTEXT"
  elif [[ -n "$CANCELLED" ]] ; then
    pattern="\- \[x\] !$CONTEXT"
  elif [[ -n "$DONE" ]] ; then
    pattern="\- \[x\]$CONTEXT"
  elif [[ -n "$BACKLOG" ]] ; then
    pattern="\- \[ \]( \.)$CONTEXT"
  elif [[ -n "$GOAL" ]] ; then
    pattern="\- \[ \]( [-~\^])$CONTEXT"
  else
    pattern="\- \[ \](?! [\.\-~\^])$CONTEXT"
  fi
  ag --nofilename --nocolor --nobreak "$pattern" $THINGS_DIR |
    cut -c 3- |
    sort | cut -c -$(tput cols)
  echo
else
  # Create a todo
  relativeTodayLog=my-notes/stream/`date +%m%d`.md
  todayLog=$THINGS_DIR/$relativeTodayLog
  if [[ ! -f "$todayLog" ]] ; then
    date=`date '+%a %d %b %Y' | tr [:lower:] [:upper:]`
    printf "# %s\n\n\n" "${date}" >> $todayLog
  fi
  
  if [[ `wc -l < $todayLog` -lt 3 ]] ; then
    echo >> $todayLog
    if [[ `wc -l < $todayLog` -lt 3 ]] ; then
      echo >> $todayLog
      if [[ `wc -l < $todayLog` -lt 3 ]] ; then
        echo >> $todayLog
      fi
    fi
  fi
  echo $relativeTodayLog
  if [[ "$SHIM_OS" = "termux" ]] ; then
    # sed -i gives a permission error on termux, not sure why
    # for now, just append to end which is good enough
    echo "- [ ] ${todo}" >> $todayLog
  else
    $SHIM_SED -i "3i- [ ] ${todo}" $todayLog
  fi
  ag --nofilename --nocolor --nobreak '\- \[ \](?! [\.~\^])' $THINGS_DIR | wc -l
fi
