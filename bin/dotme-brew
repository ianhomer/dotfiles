#!/usr/bin/env bash

#
# Install brew packages
#

set -e

while getopts "a" o; do case "$o" in
  a) ADMIN=y ;;
esac done

$(shim) && . ${ME}/i.sh

BREW_DIR=${DOTFILES_DIR}/config/brew

if [[ "$ADMIN" != "y" ]] ; then
  should-run -m 7 $0 $BREW_DIR/Brewfile || exit 0
fi

if ! is-executable brew ; then
  log:: "installing brew"
  curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install \
    | ruby
fi

adminFormula="adoptopenjdk8 adoptopenjdk11 java11 openjdk@11 powershell"

# Pin formula that need password to upgrade if not in admin mode
for formula in $adminFormula ; do
  if [[ "$ADMIN" == "y" ]] ; then
    log:: "unpinning $formula"
    brew unpin $formula &>/dev/null || log:: "not unpinned $formula"
  else
    if brew list $formula &>/dev/null ; then
      log:: "pinning $formula"
      brew pin $formula
    fi
  fi
done

log:: "updating brew"
# Use latest version of brew
brew update

log:: "upgrading brew"
# Upgrade any already installed formulae
brew upgrade

cd $DOTFILES_DIR/config/brew
brew bundle

if [[ "$ADMIN" == "y" ]] ; then
  log:: "installing admin packages"
  cd $SCRIPT_DIR/../config/brew/admin
  brew bundle
fi

# Restart Alfred - it might have updated, and it's quick to recycle, so until I
# can be cleverer about restarting when updated ...
osascript -e 'tell application "Alfred" to quit'
/usr/bin/open -a "Alfred 4"

should-run -fu $0
